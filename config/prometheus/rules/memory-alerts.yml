groups:
  - name: memory_alerts
    interval: 30s
    rules:
      # High memory usage alert
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 80
        for: 2m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 80% (current: {{ $value }}%)"
          
      # Critical memory usage alert
      - alert: CriticalMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 1m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Critical memory usage detected"
          description: "Memory usage is above 90% (current: {{ $value }}%). Immediate action required."
          
      # Container memory limit approached
      - alert: ContainerMemoryLimit
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 85
        for: 3m
        labels:
          severity: warning
          service: "{{ $labels.name }}"
        annotations:
          summary: "Container {{ $labels.name }} approaching memory limit"
          description: "Container {{ $labels.name }} is using {{ $value }}% of its memory limit"
          
      # API backend memory usage
      - alert: APIBackendHighMemory
        expr: (container_memory_usage_bytes{name="sixty-api-optimized"} / 1024 / 1024) > 320
        for: 2m
        labels:
          severity: warning
          service: api-backend
        annotations:
          summary: "API Backend high memory usage"
          description: "API Backend is using {{ $value }}MB of memory (limit: 384MB)"
          
      # Redis memory usage
      - alert: RedisHighMemory
        expr: (redis_memory_used_bytes / 1024 / 1024) > 56
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis high memory usage"
          description: "Redis is using {{ $value }}MB of memory (limit: 64MB)"
          
      # Nginx memory usage
      - alert: NginxHighMemory
        expr: (container_memory_usage_bytes{name="sixty-frontend-optimized"} / 1024 / 1024) > 100
        for: 5m
        labels:
          severity: warning
          service: nginx
        annotations:
          summary: "Nginx high memory usage"
          description: "Nginx is using {{ $value }}MB of memory (limit: 128MB)"
          
      # Database connection pool exhaustion
      - alert: DatabaseConnectionPoolExhaustion
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 2m
        labels:
          severity: warning
          service: postgres
        annotations:
          summary: "Database connection pool near exhaustion"
          description: "Database is using {{ $value | humanizePercentage }} of available connections"
          
  - name: performance_alerts
    interval: 30s
    rules:
      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 3m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is {{ $value }}s"
          
      # Memory leak detection
      - alert: MemoryLeakDetection
        expr: increase(process_resident_memory_bytes[1h]) > 50000000  # 50MB increase per hour
        for: 2h
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "Potential memory leak in {{ $labels.job }}"
          description: "Memory usage has increased by {{ $value | humanize1024 }}B in the last hour"
          
      # Garbage collection issues
      - alert: HighGCTime
        expr: rate(nodejs_gc_duration_seconds_sum[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: nodejs
        annotations:
          summary: "High garbage collection time"
          description: "GC is taking {{ $value | humanizePercentage }} of CPU time"
          
  - name: resource_alerts  
    interval: 30s
    rules:
      # Disk space
      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 10
        for: 1m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 10% on {{ $labels.mountpoint }}"
          
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is above 80% (current: {{ $value }}%)"
          
      # Container restart detection
      - alert: ContainerRestart
        expr: increase(container_start_time_seconds[10m]) > 0
        for: 0m
        labels:
          severity: info
          service: "{{ $labels.name }}"
        annotations:
          summary: "Container {{ $labels.name }} restarted"
          description: "Container {{ $labels.name }} has restarted"