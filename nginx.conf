# High-Performance Nginx Configuration for Sixty Sales Dashboard
# Optimized for CDN integration, caching, and performance

# Main configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

# Error log with appropriate level
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections and optimizations
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    
    # Hide Nginx version
    server_tokens off;
    
    # Logging format optimized for monitoring
    log_format main escape=json '{'
        '"time_local": "$time_local", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"cache_status": "$upstream_cache_status"'
    '}';
    
    access_log /var/log/nginx/access.log main buffer=16k flush=2m;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100000;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    
    # File descriptor cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 16m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli compression (if module available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-opentype
        application/x-font-truetype
        application/x-font-ttf
        application/x-javascript
        application/xhtml+xml
        application/xml
        font/eot
        font/opentype
        font/otf
        font/truetype
        image/svg+xml
        image/vnd.microsoft.icon
        image/x-icon
        image/x-win-bitmap
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # Security headers map
    map $sent_http_content_type $csp_policy {
        ~text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://supabase.yourdomain.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' https://supabase.yourdomain.com wss://supabase.yourdomain.com; frame-ancestors 'none';";
        default "";
    }
    
    # Cache path configuration
    proxy_cache_path /var/cache/nginx/api 
        levels=1:2 
        keys_zone=api_cache:10m 
        max_size=100m 
        inactive=60m 
        use_temp_path=off;
    
    proxy_cache_path /var/cache/nginx/static 
        levels=1:2 
        keys_zone=static_cache:10m 
        max_size=1g 
        inactive=30d 
        use_temp_path=off;
    
    # Upstream backend configuration
    upstream api_backend {
        least_conn;
        server backend1.yourdomain.com:8000 max_fails=3 fail_timeout=30s;
        server backend2.yourdomain.com:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Main server block
    server {
        listen 80;
        server_name yourdomain.com www.yourdomain.com;
        
        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server block
    server {
        listen 443 ssl http2;
        server_name yourdomain.com www.yourdomain.com;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # SSL configuration
        ssl_certificate /etc/ssl/certs/yourdomain.com.crt;
        ssl_certificate_key /etc/ssl/private/yourdomain.com.key;
        ssl_trusted_certificate /etc/ssl/certs/yourdomain.com.chain.crt;
        
        # SSL optimization
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Connection limits
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;
        
        # General rate limiting
        limit_req zone=general burst=50 nodelay;
        
        # Security headers
        add_header Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\" always;
        add_header X-Content-Type-Options \"nosniff\" always;\n        add_header X-Frame-Options \"DENY\" always;\n        add_header X-XSS-Protection \"1; mode=block\" always;\n        add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\n        add_header Content-Security-Policy $csp_policy always;\n        add_header Permissions-Policy \"camera=(), microphone=(), geolocation=(), payment=()\" always;\n        \n        # Remove server info\n        more_clear_headers Server;\n        \n        # API proxy with caching\n        location /api/ {\n            # API rate limiting\n            limit_req zone=api burst=20 nodelay;\n            \n            # CORS headers\n            add_header Access-Control-Allow-Origin \"https://yourdomain.com\" always;\n            add_header Access-Control-Allow-Methods \"GET, POST, PUT, DELETE, OPTIONS\" always;\n            add_header Access-Control-Allow-Headers \"DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization\" always;\n            add_header Access-Control-Expose-Headers \"Content-Length,Content-Range\" always;\n            \n            # Handle preflight requests\n            if ($request_method = 'OPTIONS') {\n                add_header Access-Control-Allow-Origin \"https://yourdomain.com\";\n                add_header Access-Control-Allow-Methods \"GET, POST, PUT, DELETE, OPTIONS\";\n                add_header Access-Control-Allow-Headers \"DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization\";\n                add_header Access-Control-Max-Age 1728000;\n                add_header Content-Type \"text/plain; charset=utf-8\";\n                add_header Content-Length 0;\n                return 204;\n            }\n            \n            # Proxy settings\n            proxy_pass http://api_backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_set_header X-Forwarded-Host $host;\n            proxy_set_header X-Forwarded-Port $server_port;\n            \n            # Timeouts\n            proxy_connect_timeout 5s;\n            proxy_send_timeout 10s;\n            proxy_read_timeout 10s;\n            \n            # Buffer settings\n            proxy_buffering on;\n            proxy_buffer_size 128k;\n            proxy_buffers 4 256k;\n            proxy_busy_buffers_size 256k;\n            \n            # Caching for GET requests only\n            proxy_cache api_cache;\n            proxy_cache_methods GET HEAD;\n            proxy_cache_valid 200 302 5m;\n            proxy_cache_valid 404 1m;\n            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;\n            proxy_cache_revalidate on;\n            proxy_cache_lock on;\n            \n            # Cache bypass for authenticated requests\n            proxy_cache_bypass $http_authorization;\n            proxy_no_cache $http_authorization;\n            \n            # Add cache status header\n            add_header X-Cache-Status $upstream_cache_status always;\n        }\n        \n        # Authentication endpoints with stricter rate limiting\n        location ~ ^/api/(auth|login) {\n            limit_req zone=login burst=2 nodelay;\n            \n            proxy_pass http://api_backend;\n            proxy_http_version 1.1;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            \n            # No caching for auth\n            proxy_no_cache 1;\n            proxy_cache_bypass 1;\n            add_header Cache-Control \"no-store, no-cache, must-revalidate\" always;\n        }\n        \n        # Static assets with aggressive caching\n        location /assets/ {\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n            add_header Vary \"Accept-Encoding\";\n            \n            # Enable caching\n            proxy_cache static_cache;\n            proxy_cache_valid 200 302 1y;\n            proxy_cache_use_stale error timeout updating;\n            \n            # Gzip static assets\n            gzip_static on;\n            brotli_static on;\n            \n            # Set headers for service worker\n            location ~* \\.js$ {\n                expires 1y;\n                add_header Cache-Control \"public, immutable\";\n                add_header Service-Worker-Allowed \"/\";\n            }\n        }\n        \n        # Images with optimization\n        location ~* \\.(jpg|jpeg|png|gif|ico|webp|svg|avif)$ {\n            expires 30d;\n            add_header Cache-Control \"public, max-age=2592000\";\n            add_header Vary \"Accept, Accept-Encoding\";\n            \n            # Image optimization headers\n            add_header Accept-CH \"DPR, Width, Viewport-Width\";\n            \n            # Enable static compression\n            gzip_static on;\n            brotli_static on;\n        }\n        \n        # Fonts with perfect caching\n        location ~* \\.(woff2?|eot|ttf|otf)$ {\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n            add_header Access-Control-Allow-Origin \"*\";\n            \n            # Preload critical fonts\n            add_header Link \"</assets/fonts/main.woff2>; rel=preload; as=font; type=font/woff2; crossorigin\";\n        }\n        \n        # Service Worker with no cache\n        location = /sw.js {\n            expires 0;\n            add_header Cache-Control \"no-cache, no-store, must-revalidate\";\n            add_header Pragma \"no-cache\";\n            add_header Service-Worker-Allowed \"/\";\n        }\n        \n        # Manifest and other PWA files\n        location ~* \\.(json|xml)$ {\n            expires 1d;\n            add_header Cache-Control \"public, max-age=86400\";\n        }\n        \n        # HTML files (SPA routing)\n        location / {\n            try_files $uri $uri/ @fallback;\n            \n            # Short cache for HTML\n            expires 5m;\n            add_header Cache-Control \"public, max-age=300, stale-while-revalidate=600\";\n            \n            # Security headers for HTML\n            add_header X-Content-Type-Options \"nosniff\" always;\n            add_header X-Frame-Options \"DENY\" always;\n        }\n        \n        # SPA fallback\n        location @fallback {\n            rewrite ^.*$ /index.html last;\n        }\n        \n        # Health check endpoint\n        location = /health {\n            access_log off;\n            return 200 \"healthy\\n\";\n            add_header Content-Type text/plain;\n        }\n        \n        # Robots.txt\n        location = /robots.txt {\n            access_log off;\n            log_not_found off;\n        }\n        \n        # Security: Block access to hidden files\n        location ~ /\\. {\n            deny all;\n            access_log off;\n            log_not_found off;\n        }\n        \n        # Security: Block access to backup files\n        location ~ ~$ {\n            deny all;\n            access_log off;\n            log_not_found off;\n        }\n        \n        # Error pages\n        error_page 404 /404.html;\n        error_page 500 502 503 504 /50x.html;\n        \n        location = /50x.html {\n            root /usr/share/nginx/html;\n        }\n    }\n    \n    # Server block for monitoring (internal only)\n    server {\n        listen 8080;\n        server_name localhost;\n        \n        # Restrict access to internal networks\n        allow 127.0.0.1;\n        allow 10.0.0.0/8;\n        allow 172.16.0.0/12;\n        allow 192.168.0.0/16;\n        deny all;\n        \n        # Nginx status\n        location = /nginx_status {\n            stub_status on;\n            access_log off;\n        }\n        \n        # Cache status\n        location = /cache_status {\n            proxy_cache_purge api_cache $request_uri;\n        }\n        \n        # Health check with detailed status\n        location = /health/detailed {\n            access_log off;\n            return 200 '{\"status\":\"healthy\",\"timestamp\":\"$time_iso8601\",\"server\":\"$hostname\"}';\n            add_header Content-Type application/json;\n        }\n    }\n}"