-- Migration: Enhance activities table with EditActivityForm fields
-- Date: 2025-09-01
-- Purpose: Add new fields to support enhanced EditActivityForm functionality

-- Add new columns to activities table for enhanced form features
ALTER TABLE activities 
ADD COLUMN IF NOT EXISTS outbound_type TEXT CHECK (outbound_type IN ('email', 'linkedin', 'call')),
ADD COLUMN IF NOT EXISTS proposal_date DATE,
ADD COLUMN IF NOT EXISTS is_rebooking BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS is_self_generated BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS sale_date DATE;

-- Add comments for documentation
COMMENT ON COLUMN activities.outbound_type IS 'Type of outbound activity: email, linkedin, or call';
COMMENT ON COLUMN activities.proposal_date IS 'Date when proposal was sent';
COMMENT ON COLUMN activities.is_rebooking IS 'Whether this meeting was rebooked from a previous no-show or cancellation';
COMMENT ON COLUMN activities.is_self_generated IS 'Whether this meeting was self-generated by the sales rep';
COMMENT ON COLUMN activities.sale_date IS 'Actual date of sale completion (separate from activity date)';

-- Create index on outbound_type for filtering performance
CREATE INDEX IF NOT EXISTS idx_activities_outbound_type ON activities(outbound_type) WHERE outbound_type IS NOT NULL;

-- Create index on proposal_date for date-based queries
CREATE INDEX IF NOT EXISTS idx_activities_proposal_date ON activities(proposal_date) WHERE proposal_date IS NOT NULL;

-- Create index on sale_date for reporting queries
CREATE INDEX IF NOT EXISTS idx_activities_sale_date ON activities(sale_date) WHERE sale_date IS NOT NULL;

-- Create index on rebooking flag for analytics
CREATE INDEX IF NOT EXISTS idx_activities_is_rebooking ON activities(is_rebooking) WHERE is_rebooking = true;

-- Create index on self-generated flag for sales rep recognition
CREATE INDEX IF NOT EXISTS idx_activities_is_self_generated ON activities(is_self_generated) WHERE is_self_generated = true;

-- Update RLS policies if needed (activities table should already have proper RLS)
-- The existing RLS policies should cover these new columns automatically

-- Add a function to validate outbound activities have outbound_type when type = 'outbound'
CREATE OR REPLACE FUNCTION validate_outbound_activity()
RETURNS TRIGGER AS $$
BEGIN
  -- For outbound activities, ensure outbound_type is set
  IF NEW.type = 'outbound' AND NEW.outbound_type IS NULL THEN
    RAISE EXCEPTION 'Outbound activities must have an outbound_type specified';
  END IF;
  
  -- For non-outbound activities, clear outbound_type if it was accidentally set
  IF NEW.type != 'outbound' AND NEW.outbound_type IS NOT NULL THEN
    NEW.outbound_type := NULL;
  END IF;
  
  -- For non-meeting activities, clear meeting-specific flags
  IF NEW.type != 'meeting' THEN
    NEW.is_rebooking := FALSE;
    NEW.is_self_generated := FALSE;
  END IF;
  
  -- For non-proposal activities, clear proposal_date
  IF NEW.type != 'proposal' AND NEW.proposal_date IS NOT NULL THEN
    NEW.proposal_date := NULL;
  END IF;
  
  -- For non-sale activities, clear sale_date
  IF NEW.type != 'sale' AND NEW.sale_date IS NOT NULL THEN
    NEW.sale_date := NULL;
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger to validate activity data
DROP TRIGGER IF EXISTS validate_outbound_activity_trigger ON activities;
CREATE TRIGGER validate_outbound_activity_trigger
  BEFORE INSERT OR UPDATE ON activities
  FOR EACH ROW
  EXECUTE FUNCTION validate_outbound_activity();

-- Migration verification queries (commented out - run manually if needed to verify)
/*
-- Verify new columns exist
SELECT column_name, data_type, column_default, is_nullable 
FROM information_schema.columns 
WHERE table_name = 'activities' 
  AND column_name IN ('outbound_type', 'proposal_date', 'is_rebooking', 'is_self_generated', 'sale_date')
ORDER BY column_name;

-- Verify indexes were created
SELECT indexname, indexdef 
FROM pg_indexes 
WHERE tablename = 'activities' 
  AND indexname LIKE 'idx_activities_%'
ORDER BY indexname;

-- Test the validation function
INSERT INTO activities (type, client_name, details, status, user_id, sales_rep, outbound_type) 
VALUES ('outbound', 'Test Client', 'Test outbound', 'completed', 'test-user-id', 'Test Rep', 'email');
*/